// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int    @id @default(autoincrement())
  username  String @unique
  firstname String
  lastname  String
  role      Role

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?

  Reservation      Reservation[]
  ReservationAudit ReservationAudit[]
  Concert          Concert[]
}

model Concert {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  seat        Int
  createdBy   User   @relation(fields: [createdById], references: [id])
  createdById Int

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?

  Reservation      Reservation[]
  ReservationAudit ReservationAudit[]
}

model Reservation {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  concert   Concert @relation(fields: [concertId], references: [id])
  concertId Int

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
}

model ReservationAudit {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  concert   Concert @relation(fields: [concertId], references: [id], onDelete: Cascade)
  concertId Int
  action    Action

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
}

enum Role {
  ADMIN
  USER
}

enum Action {
  RESERVE
  CANCEL
}
